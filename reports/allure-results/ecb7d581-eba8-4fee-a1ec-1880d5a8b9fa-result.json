{"name": "test_create_and_merge_pull_request", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF760DFFE45+26629]\n\t(No symbol) [0x00007FF760D66010]\n\t(No symbol) [0x00007FF760BF931A]\n\t(No symbol) [0x00007FF760C4F8E7]\n\t(No symbol) [0x00007FF760C4FB1C]\n\t(No symbol) [0x00007FF760CA34A7]\n\t(No symbol) [0x00007FF760C77AEF]\n\t(No symbol) [0x00007FF760CA0169]\n\t(No symbol) [0x00007FF760C77883]\n\t(No symbol) [0x00007FF760C40550]\n\t(No symbol) [0x00007FF760C41803]\n\tGetHandleVerifier [0x00007FF7611572BD+3529853]\n\tGetHandleVerifier [0x00007FF76116DA22+3621858]\n\tGetHandleVerifier [0x00007FF7611624D3+3575443]\n\tGetHandleVerifier [0x00007FF760ECB77A+860474]\n\t(No symbol) [0x00007FF760D7088F]\n\t(No symbol) [0x00007FF760D6CBC4]\n\t(No symbol) [0x00007FF760D6CD66]\n\t(No symbol) [0x00007FF760D5C2C9]\n\tBaseThreadInitThunk [0x00007FFC1E6EE8D7+23]\n\tRtlUserThreadStart [0x00007FFC1F9DBF6C+44]", "trace": "def test_create_and_merge_pull_request():\n        \"\"\"Test case to check repository existence, create if missing, then create & merge a PR.\"\"\"\n        driver = get_driver()\n    \n        try:\n            # Step 1: Login to GitHub\n            driver = get_driver()\n            login_page = LoginPage(driver)\n            login_page.launch_application(\"https://github.com/login\")\n            login_result = login_page.login(\"GitHub\")\n            assert \"Login successful!\" in login_result, f\"Login failed: {login_result}\"\n    \n            # Step 2: Check if the repository exists\n            repo_page = RepositoryPage(driver)\n            repo_name = \"test-repo\"\n    \n>           if repo_page.is_repository_present(repo_name):\n\ntests\\ui_tests\\test_pull_request.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\repository_page.py:77: in is_repository_present\n    repo_element = self.find_element_by_text(repo_name)\npages\\base_page.py:36: in find_element_by_text\n    return WebDriverWait(self.driver, 10).until(EC.visibility_of_element_located((By.XPATH, xpath)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"85afe2bc29af25248c25e639adb3bd6a\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002271672EAC0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        ----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF760DFFE45+26629]\nE       \t(No symbol) [0x00007FF760D66010]\nE       \t(No symbol) [0x00007FF760BF931A]\nE       \t(No symbol) [0x00007FF760C4F8E7]\nE       \t(No symbol) [0x00007FF760C4FB1C]\nE       \t(No symbol) [0x00007FF760CA34A7]\nE       \t(No symbol) [0x00007FF760C77AEF]\nE       \t(No symbol) [0x00007FF760CA0169]\nE       \t(No symbol) [0x00007FF760C77883]\nE       \t(No symbol) [0x00007FF760C40550]\nE       \t(No symbol) [0x00007FF760C41803]\nE       \tGetHandleVerifier [0x00007FF7611572BD+3529853]\nE       \tGetHandleVerifier [0x00007FF76116DA22+3621858]\nE       \tGetHandleVerifier [0x00007FF7611624D3+3575443]\nE       \tGetHandleVerifier [0x00007FF760ECB77A+860474]\nE       \t(No symbol) [0x00007FF760D7088F]\nE       \t(No symbol) [0x00007FF760D6CBC4]\nE       \t(No symbol) [0x00007FF760D6CD66]\nE       \t(No symbol) [0x00007FF760D5C2C9]\nE       \tBaseThreadInitThunk [0x00007FFC1E6EE8D7+23]\nE       \tRtlUserThreadStart [0x00007FFC1F9DBF6C+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException"}, "description": "Test case to check repository existence, create if missing, then create & merge a PR.", "attachments": [{"name": "stdout", "source": "ce0ea5d1-ec66-444b-a4e4-3953234ef293-attachment.txt", "type": "text/plain"}], "start": 1742149093268, "stop": 1742149115986, "uuid": "6127dc95-0f7c-4dec-bec3-0cbf68bee07c", "historyId": "7b0149fcc281a0e32992b3df6f5d1123", "testCaseId": "7b0149fcc281a0e32992b3df6f5d1123", "fullName": "tests.ui_tests.test_pull_request#test_create_and_merge_pull_request", "labels": [{"name": "parentSuite", "value": "tests.ui_tests"}, {"name": "suite", "value": "test_pull_request"}, {"name": "host", "value": "BHUVANSPC"}, {"name": "thread", "value": "28980-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ui_tests.test_pull_request"}]}